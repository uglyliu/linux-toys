# zhuli@4paradigm.com BEGIN
export JDK_HOME=/usr/lib/jvm/jdk1.8.0_171
export JRE_HOME=$JDK_HOME/jre
export JAVA_HOME=$JDK_HOME
export PATH=$JAVA_HOME/bin:$PATH
export JAVA_OPTS='-Xmx4g'

export CUDA_HOME=/usr/local/cuda-9.0
export PATH=$CUDA_HOME/bin:$PATH
if [[ -z "$LD_LIBRARY_PATH" ]]; then
    export LD_LIBRARY_PATH=$CUDA_HOME/lib64
else
    export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH
fi

export HADOOP_HOME=/usr/local/hadoop-2.7.1
export PATH=$HADOOP_HOME/bin:$PATH

export SPARK_HOME=/usr/local/spark-2.3.0-bin-hadoop2.7
export PATH=$SPARK_HOME/bin:$PATH

export GRADLE_HOME=/usr/local/gradle-4.7
export PATH=$GRADLE_HOME/bin:$PATH

export SCALA_HOME=/usr/local/scala-2.11.7
export PATH=$SCALA_HOME/bin:$PATH

export MAVEN_HOME=/usr/local/maven-3.5.4
export PATH=$MAVEN_HOME/bin:$PATH

# Set up envs for PWS.
export OPERATORS_HOME=/home/zhuli/op
export TRIGGERS_HOME=$OPERATORS_HOME
#export ACTIVE_PROFILE=dev

alias l='ls'
alias la='ls -a'
alias cls='clear'
alias cs=cls
alias no='yes n'
alias python3=python3.6
stty -ixon

function hello() {
    echo 'Hello world.'
}

alias vo=view
alias clare=clear
alias claer=clear
alias clera=clear
alias clea=clear
alias sl=ls
alias md=mkdir

alias bzb='bazel build'
alias bzc='bazel clean'

alias pip2=pip2.7
alias pip3=pip3.6

alias py2=python2
alias py3=python3
alias ipy2=ipython2
alias ipy3=ipython3
alias pyzl="source /home/zhuli/zhuli_python/bin/activate"

alias v=vi
alias h=history
alias df='df -h'
alias rp=repeat
alias lslib='ls *.so *.a'

alias kbc=kubectl
alias kbcd='kubectl describe'
alias kbcg='kubectl get'
alias kbcl='kubectl logs'
alias kbcrm='kubectl delete'

alias mvn-package='mvn package -DskipTests -Dwagon.skip=true'
alias mvn-install='mvn install -DskipTests -Dwagon.skip=true'

alias tmux='tmux -2'

gp() 
{
    if [ $# -lt 1 ]; then
        return
    elif [ $# -eq 1 ]; then
        keyword=$1
        grep -Irn "$keyword" .
    else
        keyword=$1
        n=$2
        f=($(grep -Irn "$keyword" . | awk -F":" 'NR=='"$n"' {print $1 " +" $2}'))
        vi $f[@]
    fi
}

fd()
{
    if [ $# -lt 1 ]; then
        return
    elif [ $# -eq 1 ]; then
        keyword=$1
        find -name "$keyword" | nl
    else
        keyword=$1
        n=$2
        f=($(find -name "$keyword" | awk -F":" 'NR=='"$n"' {print $1 " +" $2}'))
        vi $f[@]
    fi
}

bb()
{
    if [ $# -ne 1 ]; then
        cd ..
        return
    fi
    n=$1
    for i in {1..$n}; do
        cd ..
    done
}

# zhuli@4paradigm.com END

